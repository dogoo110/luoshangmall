<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ls.order.mapper.OrderMapper">
	<!--新增主表数据 -->
	<insert id="saveOrder" parameterType="Order">
		insert into ls_order(
		order_id,
		order_money,
		order_paystate,
		order_time,
		user_id,
		receiver_address
		)values(#{orderId},#{orderMoney},#{orderPaystate},
		#{orderTime},#{userId},#{receiverAddress});
		<!-- 新增从表数据 -->
		insert into ls_order_item(
		order_id,
		product_id,
		num,
		product_image,
		product_name,
		product_price,
		size) values
		<foreach collection="orderItems" item="item" separator=",">
			(#{orderId},#{item.productId},#{item.num},
			#{item.productImage},#{item.productName},#{item.productPrice},#{item.size})
		</foreach>
	</insert>

	<select id="queryMyOrder" parameterType="String" resultMap="orderRM">
		<!-- 单表查询,不使关联 ,查主表 -->
		select * from ls_order where user_id=#{userId} and order_paystate='0' order by order_time
		desc;
	</select>
	<resultMap type="Order" id="orderRM">
		<!-- 查询的主要关联字段order_id -->
		<id property="orderId" column="order_id" />
		<!-- 设置对多关系数据的封装 --><!-- select属性的值 指向一个select标签 -->
		<collection property="orderItems" javaType="ArrayList"
			ofType="OrderItem" column="order_id" select="queryOrderItems"></collection>
	</resultMap>
	<select id="queryOrderItems" parameterType="String" resultType="orderItem">
		select * from ls_order_item where order_id=#{orderId}
	</select>

	<delete id="deleteOrder" parameterType="String">
		delete a,b from ls_order
		a,ls_order_item b
		where a.order_id=b.order_id
		and a.order_id=#{orderId}
	</delete>

	<delete id="deleteOTOders" parameterType="date">
		delete a,b from ls_order
		a,ls_order_item b
		where a.order_id=b.order_id
		and a.order_paystate=0
		and
		a.order_time &lt;=#{date}

	</delete>

	<update id="changePaystate" parameterType="OrderSelect">
	update ls_order set order_paystate=1
	 where user_id=#{userId} and order_id=#{orderId}
	</update>
	
	<select id="queryItemId" resultType="DeleteStyleNum">
	select product_id,size,num from ls_order_item where order_id=#{orderId}
	</select>
	
	
	<update id="delStyleNum" parameterType="DeleteStyleNum">
	 update ls_product_style set style_num=style_num-#{num}
	 where product_id=#{productId} and style_size=#{size}
	</update>
	
</mapper>